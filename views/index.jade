extends layout

block header-scripts
    script(type='text/javascript', src='/javascripts/d3.min.js')
    script(type='text/javascript', src='/javascripts/crossfilter.min.js')
    script(type='text/javascript', src='/javascripts/dc.min.js')
    script(type='text/javascript', src='/javascripts/graph.utils.js')

block content
  h1= title
  p Welcome to our visualization using Node, D3.js, Jade & Stylus
  #d3-visualisation

block body-scripts
  script(type='text/javascript').
      var d3 = d3 || require('d3');
      var element = typeof module !== 'undefined' && module.exports ? 'body' : '#d3-visualisation';

      data = {
          nodes: [
              {size: 10, name: "Microsoft"},
              {size: 5, name: "Oracle"},
              {size: 2, name: "IBM"},
              {size: 3, name: "Apple"},
              {size: 30, name: "Sony"},
              {size: 40, name :"Samsung"}
          ],
          links: [
              {source: 0, target: 1},
              {source: 0, target: 2},
              {source: 1, target: 0},
              {source: 3, target: 0},
              {source: 4, target: 1}
          ]
      };

      var width = 1000;
      var height = 500;

      var nodes = data.nodes;
      var links = data.links;

      var force = d3.layout.force()
              .nodes(nodes)
              .links(links)
              .charge(-3000)
              .friction(0.6)
              .gravity(0.6)
              .size([width, height])
              .start();

      var linkedByIndex = {};
      links.forEach(function (d) {
          linkedByIndex[d.source.index + "," + d.target.index] = true;
      });

      var svg = d3.select("body").append("svg")
              .attr("width", width)
              .attr("height", height);

      var link = svg.selectAll("line")
              .data(links)
              .enter().append("line");

      var node = svg.selectAll(".node")
              .data(nodes)
              .enter().append("g")
              .attr("class", "node")
              .call(force.drag);

      node
              .append("circle")
              .attr("r", node_radius)
              .on("mouseover", mouseOverFunction)
              .on("mouseout", mouseOutFunction);

      node
              .append("text")
              .attr("x", 12)
              .attr("dy", ".35em")
              .text(function(d) { return d.name; });

      svg
              .append("marker")
              .attr("id", "arrowhead")
              .attr("refX", 6 + 7) // Controls the shift of the arrow head along the path
              .attr("refY", 2)
              .attr("markerWidth", 6)
              .attr("markerHeight", 4)
              .attr("orient", "auto")
              .append("path")
              .attr("d", "M 0,0 V 4 L6,2 Z");

      link
              .attr("marker-end", "url()");

      force
              .on("tick", tick);

      // Export it using console command 'node index.js > out.svg'
      if (typeof module !== 'undefined' && module.exports) {
          module.exports = svg;
      }